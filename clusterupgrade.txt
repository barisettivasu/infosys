# kubeadm version
# kubectl version
# kubectl get nodes
# kubectl cluster-info
 

# kubectl create deployment frontend --image=httpd 
# kubectl expose deploy frontend --port=80


# kubectl create deployment app --image=tomcat
# kubectl expose deployment app --port=8080
 

[root@master ~]# kubectl get pods -o wide
NAME                        READY   STATUS    RESTARTS   AGE    IP          NODE    NOMINATED NODE   READINESS GATES
app-f6998cfff-hcmp2         1/1     Running   0          77s    10.32.0.5   node1   <none>           <none>
frontend-65dfd8d648-nkkpw   1/1     Running   0          2m8s   10.40.0.4   node2   <none>           <none>
[root@master ~]#



NOTE: To find the latest stable to upgrade kubeadm use the command “apt-cache madison kubeadm”

[root@master ~]# rpm -qa | grep -E 'kubeadm|kubelet|kubectl'
kubectl-1.24.0-0.x86_64
kubelet-1.24.0-0.x86_64
kubeadm-1.24.0-0.x86_64


1. Upgrade Controller node

Step 1.1: Update kubeadm

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

list all avail version

 yum list --showduplicates kubeadm --disableexcludes=kubernetes
 

update kubeadm

yum install -y kubeadm-1.25.0-0 --disableexcludes=kubernetes

Drain master node to update it

kubectl drain master --ignore-daemonsets

[root@master ~]# kubectl get nodes
NAME     STATUS                     ROLES           AGE    VERSION
master   Ready,SchedulingDisabled   control-plane   122m   v1.24.0
node1    Ready                      <none>          115m   v1.24.0
node2    Ready                      <none>          116m   v1.24.0




Step 1.2: Create upgrade plan

kubeadm upgrade plan

yum install -y kubeadm-1.25.0-0 --disableexcludes=kubernetes

Step 1.3: Upgrade Kubernetes on Controller node
We will execute the kubeadm upgrade apply command to initiate the upgrade:

kubeadm upgrade apply v1.25.0


kubeadm version -o short

Step 1.4: Update kubelet and kubectl

yum install -y kubelet-1.25.8-0 kubectl-1.25.8-0 --disableexcludes=kubernetes

systemctl daemon-reload
systemctl restart kubelet


Step 1.5: Re-enable scheduling
kubectl uncordon master

[root@master ~]# kubectl get nodes
NAME     STATUS   ROLES           AGE    VERSION
master   Ready    control-plane   135m   v1.25.0
node1    Ready    <none>          128m   v1.24.0
node2    Ready    <none>          129m   v1.24.0



######################################

2. Upgrade worker node

Step 2.1: Update kubeadm

yum install -y kubeadm-1.25.0-8 --disableexcludes=kubernetes

Step 2.2: Disable scheduling on worker node

kubectl drain node1 --ignore-daemonsets --force --delete-local-data


[root@master ~]# kubectl get nodes
NAME     STATUS                     ROLES           AGE    VERSION
master   Ready                      control-plane   138m   v1.25.0
node1    Ready,SchedulingDisabled   <none>          131m   v1.24.0
node2    Ready                      <none>          132m   v1.24.0


Step 2.3: Perform Kubernetes upgrade
go to worker node and execute following node
kubeadm upgrade node


Step 2.4: Update kubelet and kubectl
yum install -y kubelet-1.25.8-0 kubectl-1.25.8-0 --disableexcludes=kubernetes

Step 2.5: Re-enable scheduling
go to master nodes

kubectl uncordon node1
 systemctl daemon-reload
 systemctl restart kubelet



run this on maste node

[root@master ~]# kubectl get nodes
NAME     STATUS     ROLES           AGE    VERSION
master   Ready      control-plane   143m   v1.25.0
node1    NotReady   <none>          136m   v1.25.0
node2    Ready      <none>          136m   v1.24.0




 kubeadm version -o short
 
 






