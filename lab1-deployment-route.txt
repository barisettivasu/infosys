Introduction:
OpenShift is a container application platform that allows developers to deploy, manage and scale applications on the cloud. In this tutorial, we will explore some of the commonly used OpenShift commands to perform basic operations such as creating an application, managing services, and exposing applications.

through console:
--------------------
++console-openshift-console.apps.testoc.openshiftoc.tk ---> openshift console
++https://console-openshift-console.apps.newoc.openshiftoc.tk/ ---> console login openshift
username:kubeadmin
password:dbN4S-XLTIT-UbCiN-mFqt3
through cli login:
-------------------
create any one instance and install zip package of openshift nd then login.
1)yum install curl wget unzip -y
2)wget https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-linux.tar.gz
3)tar -xzvf openshift-client-linux.tar.gz
4)mv oc kubectl /usr/bin
5)oc --> oc command u can executes for checking whether oc working or not.
5)oc login https://api.newoc.openshiftoc.tk:6443 -u kubeadmin -p dbN4S-XLTIT-UbCiN-mFqt3
6) oc get nodes or svc -->checking oc successfully working.

Prerequisites:
Before starting the lab, ensure that you have the following:

An OpenShift cluster up and running
An account with cluster-admin permissions

Lab: create nginx project

$oc new-project nginx
Adding Security Context Constraints (SCC)
The first step is to add anyuid Security Context Constraints to the default service account. This allows the pod to run as a non-root user.

$oc debug node/ip-10-0-131-83.ap-south-1.compute.internal ---> for debuging of node

$ oc adm policy add-scc-to-user anyuid -z default

Creating a new application
The next step is to create a new application using the nginx Docker image.
$ oc new-app --docker-image=nginx --name=nginx

Checking the status
To check the status of the application, use the following command.
$ oc status

Getting deployment details
To get the deployment details, use the following command.
$ oc get deploy

Getting service details
To get the service details, use the following command.
$ oc get svc

Editing service details
To edit the service details, use the following command.
$ oc edit svc nginx

Getting service details again
To get the service details again, use the following command.
$ oc get svc

Getting deployment details again
To get the deployment details again, use the following command.
$ oc get deploy

Getting pod details
To get the pod details, use the following command.
$ oc get pod

Editing service details again
To edit the service details again, use the following command.
$ oc edit svc nginx

Getting pod details again
To get the pod details again, use the following command.
$ oc get pod

Exposing the service
To expose the service, use the following command.
$ oc expose svc nginx

Checking service details using kubectl
To check the service details using kubectl, use the following command.
$ kubectl get svc

Getting route details
To get the route details, use the following command.
$ oc get route

Describing the route
To describe the route, use the following command.
$ oc describe route nginx
--------------------------------------------------------------------------------------------------------------------------------------------------
Â https://console.redhat.com/openshift/install  ---create account for console of openshhift
-------------------------------------------------------------------------------------------------
lab 01:oc install and login to openshift:
-------------------------------------

    1  yum install wget
    2  wget https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-linux.tar.gz
    3  ls
    4  tar -xzvf openshift-client-linux.tar.gz
    5  ls
    6  mv oc kubectl /usr/bin
    7  ls
    8  oc get nodes
    9  kubectl get nodes
   10  oc login https://api.testoc.openshiftoc.tk:6443 -u kubeadmin -p 6Xhfp-hbINR-MxD7R-qZM7u
   11  oc get nodes
   12  history
----------------------------------------------------------------------------------
basic commands:
-----------------  
  3  oc get pods
    4  oc get nodes
    5  oc debug node/ip-10-0-131-83.ap-south-1.compute.internal
    6  oc get ns
    7  oc get ns | grep "nginx"
    8  oc new-project nginx-vasu
    9  oc get ns | grep "nginx"
   10  oc adm policy add-scc-to-user anyuid -z default
   11  oc status
   12  oc get nodes
   13  oc get pods
   14  oc get policies
   15  oc get policy
   16  oc get clusterrole
   17  oc get clusterrole | grep "default"
   18  oc project
   19  oc new-app --docker-image=nginx --name=nginx-vasu
   20  oc get pod
   21  kubectl get pod
   22  oc get svc
   23  oc status
   24  oc project nginx
   25  oc project
   26  oc project nginx-vasu
   27  oc project
   28  oc edit svc nginx
   29  oc edit svc nginx-vasu
   30  oc get svc
   31  oc expose svc nginx-vasu
   32  oc get route
   33  curl nginx-vasu-nginx-vasu.apps.testoc.openshiftoc.tk
   34  history

--------------------------------------------
for tab terminal working trouble we need to do some configuration in vi '.bashrc' file. and you can kubeconfig file path in in this file . if u comeout or logout also openshift comnds executes.

at last line:
source <(oc completion bash)
source <(kubectl completion bash)
-----------------------------------------------
